@using LectureSchedulingTool.Models;
@model Subject

<h2>Предметы</h2>
<hr />

@(Html.ValidationSummary("", new { @class = "text-danger" }))

<table class="table-bordered table-condensed" align="center" width="100%">
    <thead>
        <tr>
            <td><center>№</center></td>
            <td>Факультет</td>
            <td>Кафедра</td>
            <td>Название</td>
            <td>Тип</td>
        </tr>
    </thead>
    <tbody>
        @{
            string action = ViewBag.action != null ? ViewBag.action.ToString() : "0";
            int edit_row = ViewBag.row != null ? ViewBag.row : -1;
            int elements_on_page = ViewBag.elements_on_page != null ? ViewBag.elements_on_page : 25;
            int page = ViewBag.page != null ? ViewBag.page : 1;
            int pages = ViewBag.pages != null ? ViewBag.pages : 1;

            List<Faculty> faculties = ViewBag.faculties != null ? ViewBag.faculties : null;
            IEnumerable<SelectListItem> Ifaculties = faculties.Select(f => new SelectListItem() { Value = f.id_faculty.ToString(), Text = f.abbreviation + " (" + f.name + ")" });
            List<Department> departments = ViewBag.departments != null ? ViewBag.departments : null;
            IEnumerable<SelectListItem> Idepartments = departments.Select(d => new SelectListItem() { Value = d.id_department.ToString(), Text = d.abbreviation + " (" + d.name + ")" });
            List<Subject> subjects = ViewBag.subjects != null ? ViewBag.subjects : null;

            for (int i = 0; i < subjects.Count; i++)
            {
                Faculty faculty = subjects[i].GetFaculty();
                Department department = subjects[i].GetDepartment();

                if (action == "e" && edit_row == i)
                {
                    using (Html.BeginForm("Subject", "Scheduling"))
                    {
                        <tr>
                            <input type="hidden" name="page" value="@(page)" />
                            <input type="hidden" name="row" value="@(i)" />
                            <input type="hidden" name="id_subject" value="@(subjects[i].id_subject)" />
                            <td><center>@(i + (elements_on_page * (page - 1)) + 1) </center></td>
                            <td>@(Html.DropDownList("id_faculty", Ifaculties, new { @class = "form-control" }))</td>
                            <td>@(Html.DropDownListFor(m => m.id_department, Idepartments, new { @class = "form-control" }))</td>
                            <td>@(Html.TextBoxFor(m => m.name, new { @class = "form-control" })) </td>
                            <td>@(Html.TextBoxFor(m => m.type, new { @class = "form-control" })) </td>
                            <td width="10%"><center><button type="submit" id="update" name="action" value="u" class="btn btn-primary"> Обновить</button></center></td>
                            <td width="9%"><center><button type="submit" id="cancel" name="action" value="0" class="btn btn-warning"> Отменить</button></center></td>
                        </tr>
                    }
                }
                else
                {
                    using (Html.BeginForm("Subject", "Scheduling"))
                    {
                        <tr>
                            <input type="hidden" name="page" value="@(page)" />
                            <input type="hidden" name="row" value="@(i)" />
                            <input type="hidden" name="id_subject" value="@(subjects[i].id_subject)" />
                            <td><center>@(i + (elements_on_page * (page - 1)) + 1)</center></td>
                            <td>@(faculty.abbreviation)</td>
                            <td>@(department.abbreviation)</td>
                            <td>@(subjects[i].name)</td>
                            <td>@(subjects[i].type)</td>
                            @if (action == "e" || action == "a")
                            {
                                <td width="10%"><center><button type="submit" id="edit" name="action" value="e" class="btn btn-primary" width="inherit" disabled> Редактировать</button></center></td>
                                <td width="9%"><center><button type="submit" id="remove" name="action" value="r" class="btn btn-danger" width="inherit" disabled> Удалить</button></center></td>
                            }
                            else
                            {
                                <td width="10%"><center><button type="submit" id="edit" name="action" value="e" class="btn btn-primary" width="inherit"> Редактировать</button></center></td>
                                <td width="9%"><center><button type="submit" id="remove" name="action" value="r" class="btn btn-danger" width="inherit"> Удалить</button></center></td>
                            }
                        </tr>
                    }
                }
            }
            if (action == "a")
            {
                using (Html.BeginForm("Subject", "Scheduling"))
                {
                    <tr>
                        <input type="hidden" name="page" value="@(page)" />
                        <td><center>* </center></td>
                        <td>@(Html.DropDownList("id_faculty", Ifaculties, new { @class = "form-control" }))</td>
                        <td>@(Html.DropDownListFor(m => m.id_department, Idepartments, new { @class = "form-control" }))</td>
                        <td>@(Html.TextBoxFor(m => m.name, new { @class = "form-control" })) </td>
                        <td>@(Html.TextBoxFor(m => m.type, new { @class = "form-control" })) </td>
                        <td width="10%"><center><button type="submit" id="save" name="action" value="u" class="btn btn-primary"> Обновить</button></center></td>
                        <td width="9%"><center><button type="submit" id="cancel" name="action" value="0" class="btn btn-warning"> Отменить</button></center></td>
                    </tr>
                }
            }
            using (Html.BeginForm("Subject", "Scheduling"))
            {
                <tr>
                    <input type="hidden" name="page" value="@(page)" />
                    @if (action == "e" || action == "a")
                    {
                        <td width="3%"><button type="submit" id="add" name="action" value="a" class="btn btn-info" disabled> + </button></td>
                    }
                    else
                    {
                        <td width="3%"><button type="submit" id="add" name="action" value="a" class="btn btn-info"> + </button></td>
                    }
                </tr>
            }
        }
    </tbody>
</table>

@{
    if (pages != 1)
    {
        using (Html.BeginForm("Subject", "Scheduling"))
        {
            <hr />
            <table>
                <tr>
                    <td><button type="submit" id="page" name="page" value="1" class="btn btn-default"> <<</button></td>
                    @for (int i = 1; i <= pages; i++)
                    {
                        if (i == page)
                        {
                            <td><button type="submit" id="page" name="page" value="@(i)" class="btn btn-info"> @(i) </button></td>
                        }
                        else
                        {
                            <td><button type="submit" id="page" name="page" value="@(i)" class="btn btn-default"> @(i) </button></td>
                        }
                    }
                    <td><button type="submit" id="page" name="page" value="@(pages)" class="btn btn-default"> >> </button></td>
                </tr>
            </table>
        }

        <input type="hidden" name="page" value="@(page)" />
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/Scheduling/scheduling_remove_alert.js"></script>
<script src="~/Scripts/Scheduling/scheduling_department_dynamic.js"></script>
<input name="department_list_getter" id="department_list_getter" type="hidden" value="@Url.Action("GetDepartments", "Scheduling")" />